##
##
##



##_META
##  refs:
##    - https://tecadmin.net/install-ruby-latest-stable-centos/
##



## <JINJA>
{%- from tpldir ~ '/map.jinja' import var_dct %}
## </JINJA>



# notes on Implementation Status
{#
How to Install Ruby 2.5 on CentOS/RHEL 7/6 & Fedora 28/27/26
Written by Rahul, Updated on July 6, 2018
Ruby install ruby, ROR, ruby, ruby 2.4, Ruby on Rails, ruby stable install, ruby-lang

How to Install Ruby 2.5 on CentOS/RHEL 7/6 & Fedora 28/27/26. Ruby is a dynamic, object-oriented programming language focused on simplicity and productivity. RVM (Ruby Version Manager) is a tool for installing and managing multiple Ruby versions on single operating systems. This tutorial will help you to install RVM on your system. After that install the latest Ruby 2.5 on CentOS, RedHat, and Fedora systems using RVM.
Step 1 – Installing Requirements

First of all, we need to install all required packages for ruby installation on our system using the following command.

yum install gcc-c++ patch readline readline-devel zlib zlib-devel \
   libyaml-devel libffi-devel openssl-devel make \
   bzip2 autoconf automake libtool bison iconv-devel sqlite-devel

Step 2 – Install RVM

Install the latest stable version of RVM on your system using the following command. This command will automatically download all required files and install on your system.

curl -sSL https://rvm.io/mpapis.asc | gpg --import -
curl -L get.rvm.io | bash -s stable

Also, run below command to load the RVM environment.

source /etc/profile.d/rvm.sh
rvm reload

Step 3 – Verify Dependencies

Now use the following command to verify all dependencies are properly installed. This will install any missing dependencies on your system.

rvm requirements run

Checking requirements for centos.
Requirements installation successful.

Step 4 – Install Ruby 2.5

After completing setup of RVM environment lets install Ruby language using the following command. Change Ruby version to below command you need to install.

rvm install 2.5

[Sample Output]

Searching for binary rubies, this might take some time.
No binary rubies available for: centos/7/x86_64/ruby-2.5.1.
Continuing with compilation. Please read 'rvm help mount' to get more information on binary rubies.
Checking requirements for centos.
Requirements installation successful.
Installing Ruby from source to: /usr/local/rvm/rubies/ruby-2.5.1, this may take a while depending on your cpu(s)...
ruby-2.5.1 - #downloading ruby-2.5.1, this may take a while depending on your connection...
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 13.3M  100 13.3M    0     0   866k      0  0:00:15  0:00:15 --:--:--  823k
ruby-2.5.1 - #extracting ruby-2.5.1 to /usr/local/rvm/src/ruby-2.5.1.....
ruby-2.5.1 - #configuring..................................................................
ruby-2.5.1 - #post-configuration..
ruby-2.5.1 - #compiling....................................................................
ruby-2.5.1 - #installing.............................
ruby-2.5.1 - #making binaries executable..
ruby-2.5.1 - #downloading rubygems-2.7.7
ruby-2.5.1 - #extracting rubygems-2.7.7.....................................................
ruby-2.5.1 - #removing old rubygems........
ruby-2.5.1 - #installing rubygems-2.7.7................................
ruby-2.5.1 - #gemset created /usr/local/rvm/gems/ruby-2.5.1@global
ruby-2.5.1 - #importing gemset /usr/local/rvm/gemsets/global.gems...................................................
ruby-2.5.1 - #generating global wrappers.......
ruby-2.5.1 - #gemset created /usr/local/rvm/gems/ruby-2.5.1
ruby-2.5.1 - #importing gemsetfile /usr/local/rvm/gemsets/default.gems evaluated to empty gem list
ruby-2.5.1 - #generating default wrappers.......
ruby-2.5.1 - #adjusting #shebangs for (gem irb erb ri rdoc testrb rake).
Install of ruby-2.5.1 - #complete
Ruby was built without documentation, to build it run: rvm docs generate-ri

Step 5 – Setup Default Ruby Version

First of all, check the currently installed ruby versions on your system. So that we can find which version is using currently by the system and which is set to default.

rvm list

   ruby-2.3.5 [ x86_64 ]
   ruby-2.4.2 [ x86_64 ]
 * ruby-2.4.4 [ x86_64 ]
=> ruby-2.5.1 [ x86_64 ]

# => - current
# =* - current && default
#  * - default

After that use rvm command to set up the default ruby version to be used by applications.

rvm use 2.5 --default

Using /usr/local/rvm/gems/ruby-2.5.1

Step 6 – Verify Active Ruby Version

Using following command you can check the current ruby version is used.

ruby --version

ruby 2.5.1p57 (2018-03-29 revision 63029) [x86_64-linux]

Congratulation’s, Finally you have successfully installed Ruby on your system. Read our next articles to deploy Ruby with Apache or Ruby with Nginx web server with simple steps.
#}



# Step 1 – Installing Requirements
# First of all, we need to install all required packages for ruby installation on our system using the following command.
{%- if var_dct.ruby.package_prerequisites|length >= 1 %}
"2E49CCA9-131E-4B35-A391-75920D68AF6F":
  pkg.installed:
    - names:
      {%- for pkg in var_dct.ruby.package_prerequisites %}
      - {{ pkg }}
      {%- endfor %}
{%- endif %}



# Step 2 – Install RVM
# Install the latest stable version of RVM on your system using the following command.
"4E4CB688-B014-4E5E-B5A7-FE8EF7C3F3B4":
  cmd.run:
    - name: |
        # This command will automatically download all required files and install on your system.
        curl -sSL https://rvm.io/mpapis.asc | gpg --import -
        curl -L get.rvm.io | bash -s stable
        # Also, run below command to load the RVM environment.
        source /etc/profile.d/rvm.sh
        rvm reload



# Step 3 – Verify Dependencies
# Now use the following command to verify all dependencies are properly installed. This will install any missing dependencies on your system.
"9490C509-08A0-497B-ACEB-365CF49B160D":
  cmd.run:
    - name: rvm requirements run



# Step 4 – Install Ruby 2.5
#   After completing setup of RVM environment lets install Ruby
#   language using the following command. Change Ruby version to below
#   command you need to install.
"8F70665B-C554-44BC-A309-6B26F361F6EE":
  cmd.run:
    - name: rvm install {{ var_dct.ruby.version }}



# Step 5 – Setup Default Ruby Version
#   Show which version is using currently by the system and which is set to default.
"C663E6B4-7382-421F-8C9C-45052830F831":
  cmd.run:
    - name: |
        # First of all, check the currently installed ruby versions on your system. 
        rvm list
        # After that use rvm command to set up the default ruby version to be used by applications.
        rvm use {{ var_dct.ruby.version }} --default



# Step 6 – Verify Active Ruby Version
#   Using following command you can check the current ruby version is used.
"F4FE1391-12C1-4B9D-8ABE-44E797BF0AF8":
  cmd.run:
    - name: ruby --version



# Congratulation’s, Finally you have successfully installed Ruby on
#   your system. Read our next articles to deploy Ruby with Apache or
#   Ruby with Nginx web server with simple steps.
"B4ABEF0D-8114-4AF0-9B29-31CFA6C75BB5":
  test.succeed_without_changes: []



## EOF
